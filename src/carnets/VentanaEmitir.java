/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carnets;

import carnets.Carnet.CarnetAnteriorInvalidoException;
import carnets.Carnet.CarnetAnteriorRequeridoException;
import carnets.Carnet.EsMayorParaPrimerProfesionalException;
import carnets.Carnet.EsMenorException;
import carnets.Carnet.EsMenorParaProfesionalException;
import com.itextpdf.text.DocumentException;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import javax.swing.AbstractButton;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class VentanaEmitir extends javax.swing.JDialog {
    private final VentanaPrincipal ventanaPrincipal = (VentanaPrincipal) this.getParent();
    private final ComboBoxModel<String> tipoDNIModel;
    private ComboBoxModel<String> grupoSanguineoModel;
    private ComboBoxModel<String> factorSanguineoModel;
    private ComboBoxModel<String> claseModel;
    private Clase claseSeleccionada;
    private Boolean esDonanteSeleccionado;
    private TipoDocumento tipoDocumentoSeleccionado;
    private FactorSanguineo factorSanguineoSeleccionado;
    private GrupoSanguineo grupoSanguineoSeleccionado;
    
    /**
     * Creates new form VentanaEmitir
     */
    public VentanaEmitir(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        
        // Init tipoDNICombo
        ArrayList<String> tipoDNIModelItems = new ArrayList<>();
        for (TipoDocumento tipoDocumento: ventanaPrincipal.tipoDocumentos) {
            tipoDNIModelItems.add(tipoDocumento.nombre);
        }
        tipoDNIModel = new DefaultComboBoxModel(tipoDNIModelItems.toArray());
        
        // Init grupoSanguineoCombo
        ArrayList<String> grupoSanguineoModelItems = new ArrayList<>();
        for (GrupoSanguineo grupoSanguineo: ventanaPrincipal.grupoSanguineos) {
            grupoSanguineoModelItems.add(grupoSanguineo.nombre);
        }
        grupoSanguineoModel = new DefaultComboBoxModel(grupoSanguineoModelItems.toArray());
        
        // Init factorSanguineoCombo
        ArrayList<Character> factorSanguineoModelItems = new ArrayList<>();
        for (FactorSanguineo factorSanguineo: ventanaPrincipal.factorSanguineos) {
            factorSanguineoModelItems.add(factorSanguineo.signo);
        }
        factorSanguineoModel = new DefaultComboBoxModel(factorSanguineoModelItems.toArray());
        
        // Init factorSanguineoCombo
        ArrayList<Character> claseModelItems = new ArrayList<>();
        for (Clase clase: ventanaPrincipal.clases) {
            claseModelItems.add(clase.letra);
        }
        claseModel = new DefaultComboBoxModel(claseModelItems.toArray());
        
        initComponents();
        
        tipoDNICombo.setSelectedIndex(0);
        grupoSanguineoCombo.setSelectedIndex(0);
        factorSanguineoCombo.setSelectedIndex(0);
        claseCombo.setSelectedIndex(0);
        esDonanteSeleccionado = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        tipoDNICombo = new javax.swing.JComboBox<>();
        nroDNITextField = new javax.swing.JTextField();
        apellidosTextField = new javax.swing.JTextField();
        nombresTextField = new javax.swing.JTextField();
        fechaNacimientoTextField = new javax.swing.JTextField();
        domicilioTextField = new javax.swing.JTextField();
        grupoSanguineoCombo = new javax.swing.JComboBox<>();
        factorSanguineoCombo = new javax.swing.JComboBox<>();
        claseCombo = new javax.swing.JComboBox<>();
        costoLabel = new javax.swing.JLabel();
        observacionesTextField = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        emitirBtn = new javax.swing.JButton();
        esDonanteCheckbox = new javax.swing.JCheckBox();

        jLabel12.setText("jLabel12");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Emitir Licencia");

        jLabel1.setText("Tipo de Documento");

        jLabel2.setText("Numero de Documento");

        jLabel3.setText("Apellidos");

        jLabel4.setText("Nombres");

        jLabel5.setText("Fecha de Nacimiento");

        jLabel6.setText("Domicilio");

        jLabel7.setText("Grupo Sanguineo");

        jLabel8.setText("Factor Sanguineo");

        jLabel9.setText("Es Donante");

        jLabel10.setText("Clase");

        jLabel13.setText("Costo   $");

        jLabel14.setText("Observaciones");

        tipoDNICombo.setModel(tipoDNIModel);
        tipoDNICombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoDNIComboActionPerformed(evt);
            }
        });

        grupoSanguineoCombo.setModel(grupoSanguineoModel);
        grupoSanguineoCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grupoSanguineoComboActionPerformed(evt);
            }
        });

        factorSanguineoCombo.setModel(factorSanguineoModel);
        factorSanguineoCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                factorSanguineoComboActionPerformed(evt);
            }
        });

        claseCombo.setModel(claseModel);
        claseCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                claseComboActionPerformed(evt);
            }
        });

        costoLabel.setText("-");

        observacionesTextField.setMargin(new java.awt.Insets(0, 0, 0, 0));

        emitirBtn.setText("Emitir");
        emitirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emitirBtnActionPerformed(evt);
            }
        });

        esDonanteCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esDonanteCheckboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(observacionesTextField)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2)
                            .addComponent(jSeparator1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(70, 70, 70)
                                        .addComponent(tipoDNICombo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel9))
                                        .addGap(53, 53, 53)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(nroDNITextField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(apellidosTextField)
                                            .addComponent(nombresTextField)
                                            .addComponent(fechaNacimientoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(domicilioTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                            .addComponent(grupoSanguineoCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(esDonanteCheckbox)
                                            .addComponent(factorSanguineoCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(0, 12, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel10)
                        .addGap(40, 40, 40)
                        .addComponent(claseCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(costoLabel)
                        .addGap(77, 77, 77))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jSeparator3)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(emitirBtn)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tipoDNICombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nroDNITextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(apellidosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nombresTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(fechaNacimientoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(domicilioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(grupoSanguineoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(factorSanguineoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(esDonanteCheckbox))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(claseCombo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(costoLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(observacionesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emitirBtn)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void emitirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emitirBtnActionPerformed
        try {
            DateTimeFormatter formatter =
                              DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate fechaNacimiento = LocalDate.parse(fechaNacimientoTextField.getText(), formatter);
            
            if (nroDNITextField.getText().equals("")) {
                throw new CampoVacioException("DNI");
            }
            
            if (apellidosTextField.getText().equals("")) {
                throw new CampoVacioException("Apellidos");
            }
            
            if (nombresTextField.getText().equals("")) {
                throw new CampoVacioException("Nombres");
            }
            
            if (domicilioTextField.getText().equals("")) {
                throw new CampoVacioException("Domicilio");
            }
            
            if (fechaNacimientoTextField.getText().equals("")) {
                throw new CampoVacioException("Fecha de Nacimiento");
            }
            
            VentanaEmitirConfirmar ventanaEmitirConfirmar = new VentanaEmitirConfirmar(ventanaPrincipal, true);
            ventanaEmitirConfirmar.setVisible(true);
            
//            Titular unTitular = new Titular(
//            tipoDocumentoSeleccionado, 
//            nroDNITextField.getText(),
//            apellidosTextField.getText(),
//            nombresTextField.getText(),
//            fechaNacimiento,
//            domicilioTextField.getText(),
//            grupoSanguineoSeleccionado,
//            factorSanguineoSeleccionado,
//            esDonanteSeleccionado,
//            observacionesTextField.getText());
        }
        catch (DateTimeParseException exc) {
            JOptionPane.showMessageDialog(null, "La fecha de nacimiento debe ser válida y estar en formato dd/mm/yyyy.");
        } catch (CampoVacioException e) {
            JOptionPane.showMessageDialog(null, e.getMessage() + " no puede estar vacío.");
//        } catch (EsMenorException e) {
//            JOptionPane.showMessageDialog(null, "No se puede emitir a un menor.");
//        } catch (EsMenorParaProfesionalException e) {
//            JOptionPane.showMessageDialog(null, "No cumple con edad mínima para el tipo profesional.");
//        } catch (EsMayorParaPrimerProfesionalException e) {
//            JOptionPane.showMessageDialog(null, "Supera la edad máxima para primer carnet profesional.");
//        } catch (CarnetAnteriorRequeridoException | CarnetAnteriorInvalidoException e) {
//            JOptionPane.showMessageDialog(null, "No cumple los requisitos de carnet B para carnet profesional.");
//        } catch (IOException | DocumentException ex) {
//            JOptionPane.showMessageDialog(null, "Error de escritura al generar el PDF.");
//        } catch (Carnet.EmisionException e) {
//            JOptionPane.showMessageDialog(null, "Error general de emisión.");
        }
    }//GEN-LAST:event_emitirBtnActionPerformed

    private void claseComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_claseComboActionPerformed
        JComboBox cb = (JComboBox)evt.getSource();
        char letraClase = (char)cb.getSelectedItem();

        for (Clase unaClase: ventanaPrincipal.clases) {
            if (unaClase.letra == letraClase) {
                claseSeleccionada = unaClase;
                break;
            }
        }
    }//GEN-LAST:event_claseComboActionPerformed

    private void tipoDNIComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoDNIComboActionPerformed
        JComboBox cb = (JComboBox)evt.getSource();
        String nombreTipoDNI = (String)cb.getSelectedItem();
        
        for (TipoDocumento unTipoDocumento: ventanaPrincipal.tipoDocumentos) {
            if (unTipoDocumento.nombre.equals(nombreTipoDNI)) {
                tipoDocumentoSeleccionado = unTipoDocumento;
                break;
            }
        }
    }//GEN-LAST:event_tipoDNIComboActionPerformed

    private void grupoSanguineoComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grupoSanguineoComboActionPerformed
        JComboBox cb = (JComboBox)evt.getSource();
        String nombreGrupoSanguineo = (String)cb.getSelectedItem();
        
        for (GrupoSanguineo unGrupoSanguineo: ventanaPrincipal.grupoSanguineos) {
            if (unGrupoSanguineo.nombre.equals(nombreGrupoSanguineo)) {
                grupoSanguineoSeleccionado = unGrupoSanguineo;
                break;
            }
        }
    }//GEN-LAST:event_grupoSanguineoComboActionPerformed

    private void factorSanguineoComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_factorSanguineoComboActionPerformed
        JComboBox cb = (JComboBox)evt.getSource();
        char nombreFactorSanguineo = (char)cb.getSelectedItem();
        
        for (FactorSanguineo unFactorSanguineo: ventanaPrincipal.factorSanguineos) {
            if (unFactorSanguineo.signo == nombreFactorSanguineo) {
                factorSanguineoSeleccionado = unFactorSanguineo;
                break;
            }
        }
    }//GEN-LAST:event_factorSanguineoComboActionPerformed

    private void esDonanteCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esDonanteCheckboxActionPerformed
        AbstractButton cb = (AbstractButton)evt.getSource();
        esDonanteSeleccionado = cb.getModel().isSelected();
    }//GEN-LAST:event_esDonanteCheckboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaEmitir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaEmitir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaEmitir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaEmitir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaEmitir dialog = new VentanaEmitir(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apellidosTextField;
    private javax.swing.JComboBox<String> claseCombo;
    private javax.swing.JLabel costoLabel;
    private javax.swing.JTextField domicilioTextField;
    private javax.swing.JButton emitirBtn;
    private javax.swing.JCheckBox esDonanteCheckbox;
    private javax.swing.JComboBox<String> factorSanguineoCombo;
    private javax.swing.JTextField fechaNacimientoTextField;
    private javax.swing.JComboBox<String> grupoSanguineoCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField nombresTextField;
    private javax.swing.JTextField nroDNITextField;
    private javax.swing.JTextField observacionesTextField;
    private javax.swing.JComboBox<String> tipoDNICombo;
    // End of variables declaration//GEN-END:variables

    private static class CampoVacioException extends Exception {
        public CampoVacioException(String campo) {
            super(campo);
        }
    }
}
